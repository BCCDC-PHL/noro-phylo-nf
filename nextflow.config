manifest {
    author = 'John Palmer <john.palmer@bccdc.ca>'
    name = 'BCCDC-PHL/noro-typing-nf'
    version = '0.2.0'
    description = 'BCCDC-PHL Norovirus Metagenomics Pipeline'
    mainScript = 'main.nf'
    nextflowVersion = '>=20.01.0'
}

params {
    profile = false
    cache = ''
    run_name = ''
    fasta_dir = ''
    sequences = ''
    metadata = "NO_FILE"
    reference            = "${projectDir}/assets/norovirus_g1_reference.fasta"
    reference_annotation = "${projectDir}/assets/norovirus_g1_reference.gff3"
    outdir = 'results'

    fasta_exts = ['*.fa', '*.fasta', '*.fna']
    fasta_search_paths = get_fasta_search_paths(fasta_exts)

    tree_method = 'iqtree'
    time_tree = false
    divergence_units = "mutations-per-site"
    root_name = 'NC_001959.2'


    recursion_limit = 1000

    config_auspice = "${projectDir}/assets/auspice_config.json"
    config_colors = "${projectDir}/assets/colors.csv"
    config_lat_long = "${projectDir}/assets/lat_longs.csv"
    
}


process {

    withLabel: medium {
        cpus = 8
        memory = 16.GB
    }
    withLabel: heavy {
        cpus = 16
        memory = 64.GB
    }
    withLabel: ultra {
        cpus = 32
        memory = 64.GB
    }
}

def get_fasta_search_paths ( fasta_exts ) {
    def fasta_search_paths = []
    for (ext in fasta_exts) {
        fasta_search_paths.add(params.fasta_dir.toString() + '/**/' + ext.toString())
    }
    
    return fasta_search_paths
}

profiles {
  conda {
    conda.enabled = true
    process.conda = "${projectDir}/environments/environment.yml"
    conda.useMamba = true
    if (params.cache) {
      conda.cacheDir = params.cache
    }
  }
}

report {
    enabled = true
    file = "${params.outdir}/${params.run_name}_report.html"
    overwrite = true 
}

timeline {
    enabled = true
    file = "${params.outdir}/${params.run_name}_timeline.html"
    overwrite = true 
}

trace {
    enabled = true
    overwrite = true
    file = "${params.outdir}/${params.run_name}_trace.txt"
}
